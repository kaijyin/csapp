#######################################################################
# Test for copying block of size 4;
#######################################################################
	.pos 0
main:	irmovq Stack, %rsp  	# Set up stack pointer

	# Set up arguments for copy function and then invoke it
	irmovq $4, %rdx		# src and dst have 4 elements
	irmovq dest, %rsi	# dst array
	irmovq src, %rdi	# src array
	call ncopy		 
	halt			# should halt with num nonzeros in %rax
StartFun:
#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	andq %rdx,%rdx		# len <= 0?
	jle Done		    # if so, goto Done:
	iaddq $-6,%rdx      # len < 6 ?
	jle fwd		        # if so, goto loop:
loop:
    mrmovq (%rdi),%r8
	mrmovq 0x8(%rdi),%r9
	rmmovq %r8,(%rsi)
	andq %r8,%r8
	rmmovq %r9,0x8(%rsi)
	jle n1
	iaddq $1,%rax
n1:
    mrmovq 0x10(%rdi),%r10
    andq %r9,%r9
	mrmovq 0x18(%rdi),%r11
	jle n2
	iaddq $1,%rax
n2:
	rmmovq %r10,0x10(%rsi)
	andq %r10,%r10
	rmmovq %r11,0x18(%rsi)
	jle n3
	iaddq $1,%rax
n3:
    mrmovq 0x20(%rdi),%r8
    andq %r11,%r11
	mrmovq 0x28(%rdi),%r9
	jle n4
	iaddq $1,%rax
n4:
    rmmovq %r8,0x20(%rsi)
	andq %r8,%r8
	rmmovq %r9,0x28(%rsi)
	jle n5
	iaddq $1,%rax
n5:
    andq %r9,%r9
	jle n6
	iaddq $1,%rax
n6:
    iaddq $0x30,%rdi
    iaddq $0x30,%rsi
    iaddq $-6,%rdx
	jg loop
fwd:
	iaddq $6,%rdx
last:
	rrmovq %rax,%rcx
    mrmovq (%rdi),%r8
	andq %r8,%r8
	cmovg %rcx,%rax
	rmmovq %r8,(%rsi)

    iaddq $8,%rdi
    iaddq $8,%rsi
	iaddq $-1,%rdx
    jg last
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
EndFun:

###############################
# Source and destination blocks 
###############################
	.align 8
src:
	.quad -1
	.quad 2
	.quad 3
	.quad -4
	.quad 0xbcdefa # This shouldn't get moved

	.align 16
Predest:
	.quad 0xbcdefa
dest:
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
Postdest:
	.quad 0xdefabc

.align 8
# Run time stack
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0

Stack:
