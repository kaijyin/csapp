                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a002000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f6f801000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7c801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: 6222                 | 	andq %rdx,%rdx		# len <= 0?
0x036: 71c401000000000000   | 	jle Done		    # if so, goto Done:
0x03f: c0f2faffffffffffffff | 	iaddq $-6,%rdx      # len < 6 ?
0x049: 716f01000000000000   | 	jle fwd		        # if so, goto loop:
0x052:                      | loop:
0x052: 50870000000000000000 |     mrmovq (%rdi),%r8
0x05c: 50970800000000000000 | 	mrmovq 0x8(%rdi),%r9
0x066: 40860000000000000000 | 	rmmovq %r8,(%rsi)
0x070: 6288                 | 	andq %r8,%r8
0x072: 40960800000000000000 | 	rmmovq %r9,0x8(%rsi)
0x07c: 718f00000000000000   | 	jle n1
0x085: c0f00100000000000000 | 	iaddq $1,%rax
0x08f:                      | n1:
0x08f: 50a71000000000000000 |     mrmovq 0x10(%rdi),%r10
0x099: 6299                 |     andq %r9,%r9
0x09b: 50b71800000000000000 | 	mrmovq 0x18(%rdi),%r11
0x0a5: 71b800000000000000   | 	jle n2
0x0ae: c0f00100000000000000 | 	iaddq $1,%rax
0x0b8:                      | n2:
0x0b8: 40a61000000000000000 | 	rmmovq %r10,0x10(%rsi)
0x0c2: 62aa                 | 	andq %r10,%r10
0x0c4: 40b61800000000000000 | 	rmmovq %r11,0x18(%rsi)
0x0ce: 71e100000000000000   | 	jle n3
0x0d7: c0f00100000000000000 | 	iaddq $1,%rax
0x0e1:                      | n3:
0x0e1: 50872000000000000000 |     mrmovq 0x20(%rdi),%r8
0x0eb: 62bb                 |     andq %r11,%r11
0x0ed: 50972800000000000000 | 	mrmovq 0x28(%rdi),%r9
0x0f7: 710a01000000000000   | 	jle n4
0x100: c0f00100000000000000 | 	iaddq $1,%rax
0x10a:                      | n4:
0x10a: 40862000000000000000 |     rmmovq %r8,0x20(%rsi)
0x114: 6288                 | 	andq %r8,%r8
0x116: 40962800000000000000 | 	rmmovq %r9,0x28(%rsi)
0x120: 713301000000000000   | 	jle n5
0x129: c0f00100000000000000 | 	iaddq $1,%rax
0x133:                      | n5:
0x133: 6299                 |     andq %r9,%r9
0x135: 714801000000000000   | 	jle n6
0x13e: c0f00100000000000000 | 	iaddq $1,%rax
0x148:                      | n6:
0x148: c0f73000000000000000 |     iaddq $0x30,%rdi
0x152: c0f63000000000000000 |     iaddq $0x30,%rsi
0x15c: c0f2faffffffffffffff |     iaddq $-6,%rdx
0x166: 765200000000000000   | 	jg loop
0x16f:                      | fwd:
0x16f: c0f20600000000000000 | 	iaddq $6,%rdx
0x179:                      | last:
0x179: 2001                 | 	rrmovq %rax,%rcx
0x17b: 50870000000000000000 |     mrmovq (%rdi),%r8
0x185: c0f10100000000000000 | 	iaddq $1,%rcx
0x18f: 6288                 | 	andq %r8,%r8
0x191: 2610                 | 	cmovg %rcx,%rax
0x193: 40860000000000000000 | 	rmmovq %r8,(%rsi)
                            | 
0x19d: c0f70800000000000000 |     iaddq $8,%rdi
0x1a7: c0f60800000000000000 |     iaddq $8,%rsi
0x1b1: c0f2ffffffffffffffff | 	iaddq $-1,%rdx
0x1bb: 767901000000000000   |     jg last
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1c4:                      | Done:
0x1c4: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1c5:                      | End:
                            | #/* $end ncopy-ys */
0x1c5:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1c8:                      | 	.align 8
0x1c8:                      | src:
0x1c8: 0100000000000000     | 	.quad 1
0x1d0: 0200000000000000     | 	.quad 2
0x1d8: fdffffffffffffff     | 	.quad -3
0x1e0: fcffffffffffffff     | 	.quad -4
0x1e8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x1f0:                      | 	.align 16
0x1f0:                      | Predest:
0x1f0: fadebc0000000000     | 	.quad 0xbcdefa
0x1f8:                      | dest:
0x1f8: abefcd0000000000     | 	.quad 0xcdefab
0x200: abefcd0000000000     | 	.quad 0xcdefab
0x208: abefcd0000000000     | 	.quad 0xcdefab
0x210: abefcd0000000000     | 	.quad 0xcdefab
0x218:                      | Postdest:
0x218: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x220:                      | .align 8
                            | # Run time stack
0x220: 0000000000000000     | 	.quad 0
0x228: 0000000000000000     | 	.quad 0
0x230: 0000000000000000     | 	.quad 0
0x238: 0000000000000000     | 	.quad 0
0x240: 0000000000000000     | 	.quad 0
0x248: 0000000000000000     | 	.quad 0
0x250: 0000000000000000     | 	.quad 0
0x258: 0000000000000000     | 	.quad 0
0x260: 0000000000000000     | 	.quad 0
0x268: 0000000000000000     | 	.quad 0
0x270: 0000000000000000     | 	.quad 0
0x278: 0000000000000000     | 	.quad 0
0x280: 0000000000000000     | 	.quad 0
0x288: 0000000000000000     | 	.quad 0
0x290: 0000000000000000     | 	.quad 0
0x298: 0000000000000000     | 	.quad 0
                            | 
0x2a0:                      | Stack:
